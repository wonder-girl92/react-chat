{"version":3,"sources":["components/App/app.module.css","components/Chat/messages.module.css","components/Profile/profileTransition.module.css","components/App/Avatar.jsx","components/Profile/ContactInfoIcons.jsx","components/Profile/ContactInfo.jsx","components/Profile/ContactSocial.jsx","components/Profile/ContactMedia.jsx","components/Profile/TopProfileBlock.jsx","components/Profile/ContactsContent.jsx","components/Profile/index.jsx","redux/ducks/contacts.js","components/SideBar/Search.js","components/SideBar/SkeletonComponent.js","components/SideBar/Contact.jsx","components/SideBar/index.jsx","down.js","redux/ducks/messages.js","components/Chat/FilterMessages.jsx","components/Chat/Header.jsx","components/Chat/MessageInfo.jsx","components/Chat/InboxMessage.jsx","components/Chat/OutboxMessage.jsx","components/Chat/MessagesBlocks.jsx","components/Chat/Messages.jsx","components/Chat/MessageSendForm.jsx","components/Chat/MessageWriteRightBlock.jsx","components/Chat/WriteMessage.jsx","components/Chat/index.jsx","redux/ducks/application.js","components/App/index.jsx","reportWebVitals.js","redux/configureStore.js","index.js","components/Profile/profile.module.css","components/SideBar/chats.module.css"],"names":["module","exports","Avatar","contact","size","online","useSelector","state","application","loading","className","styles","avatar","mediumonline","undefined","fullname","substr","ContactInfoIcons","ContactInfo","props","ContactInfoTitle","ContactInfoUsername","username","ContactSocial","ContactSocialTitle","ContactSocialNetworks","ContactSocialNetworksInstagram","ContactSocialNetworksInstagramTitle","socials","instagram","ContactSocialNetworksTwitter","ContactSocialNetworksTwitterTitle","facebook","ContactSocialNetworksFacebook","ContactSocialNetworksFacebookTitle","twitter","ContactMedia","ContactMediaTitle","ContactMediaElements","ContactMediaDoc","ContactMediaSubtitle","TopProfileBlock","ContactsContent","contacts","items","id","useParams","filteredContacts","filter","_id","profileOverflow","map","Profile","showProfile","messages","CSSTransition","in","unmountOnExit","timeout","classNames","profileTransitions","profile","exact","path","initialState","selectedContactId","setSearchContact","text","type","payload","Search","dispatch","useDispatch","placeholder","value","onChange","event","target","length","onClick","SkeletonComponent","color","highlightColor","circle","height","width","count","Contact","lastMessages","lastMessage","selected","to","content","dayjs","time","format","Sidebar","toUpperCase","indexOf","skeleton","Array","fill","item","index","useEffect","fetch","then","response","json","sidebar","messagesDownScroll","message","document","getElementById","scrollTop","scrollHeight","messageText","loadingMessage","searchForm","setFilterMessages","FilterMessages","messageSearch","messageSearchIcon","filterMessage","messageClearIcon","Header","params","find","loadingMessages","header","messageAuthorName","messageAuthorNameTitle","headerLoading","messageAuthorNameOnline","messageSettings","changeShowProfile","MessageInfo","messageDesign","InboxMessage","generalBlockMessageIn","messageAvatar","messageDesignIn","messageInText","OutboxMessage","readMessage","read","timeSendMessage","messageId","messageDesignM","messageDesignOut","messageOutText","messageTime","messageRead","deleteButton","method","MessagesBlocks","profileId","toUserId","Messages","contactsId","filteredMessages","catch","error","console","messagesModal","messageScroll","MessageSendForm","messageSendForm","setMessageText","MessageWriteRightBlock","contactId","myId","messageWriteRightBlock","clip","microphone","body","JSON","stringify","headers","sendMessage","WriteMessage","writeMessage","Chat","App","container","noSelectedChat","chatNan","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","logger","createLogger","diff","collapsed","store","createStore","combineReducers","action","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5fdf93f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2md0E\",\"noSelectedChat\":\"app_noSelectedChat__z-dbX\",\"chatNan\":\"app_chatNan__2pl-P\",\"wrap_message_profile\":\"app_wrap_message_profile__1yGS5\",\"profile-enter\":\"app_profile-enter__SYIuX\",\"avatar\":\"app_avatar__lIBR6\",\"small\":\"app_small__CsgTD\",\"medium\":\"app_medium__1wnCI\",\"large\":\"app_large__1RWTw\",\"mediumonline\":\"app_mediumonline__1CZLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messages_messages__1hnN9\",\"header\":\"messages_header__2OXIE\",\"header-center-block\":\"messages_header-center-block__12yP8\",\"messageSearch\":\"messages_messageSearch__BghCU\",\"messageClearIcon\":\"messages_messageClearIcon__1rYqC\",\"messageSettings\":\"messages_messageSettings__2YIT7\",\"messageAuthorName\":\"messages_messageAuthorName__31jDn\",\"messageAuthorNameTitle\":\"messages_messageAuthorNameTitle__1iAua\",\"messageAuthorNameOnline\":\"messages_messageAuthorNameOnline__2bRJk\",\"messagesModal\":\"messages_messagesModal__3RM5Y\",\"messageScroll\":\"messages_messageScroll__2s2sU\",\"writeMessage\":\"messages_writeMessage__1qff0\",\"messageSendForm\":\"messages_messageSendForm__3dxTo\",\"messageWriteRightBlock\":\"messages_messageWriteRightBlock__80mwV\",\"clip\":\"messages_clip__8RqV6\",\"microphone\":\"messages_microphone__1wAcX\",\"messageDesign\":\"messages_messageDesign__yp6HU\",\"messageDesignIn\":\"messages_messageDesignIn__3mcy-\",\"messageInText\":\"messages_messageInText__3eNLj\",\"messageDesignOut\":\"messages_messageDesignOut__3pzNk\",\"messageTime\":\"messages_messageTime__2qqrV\",\"messageRead\":\"messages_messageRead__3bfar\",\"messageText\":\"messages_messageText__1G2Cq\",\"headerLoading\":\"messages_headerLoading__g_i2M\",\"rotatePreloader\":\"messages_rotatePreloader__3F7f4\",\"сhooseChat\":\"messages_сhooseChat__27NpM\",\"deleteButton\":\"messages_deleteButton__OTi0L\",\"generalBlockMessageIn\":\"messages_generalBlockMessageIn__2Y81L\",\"messageAvatar\":\"messages_messageAvatar__OcNfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"profileTransition_enter__16QoQ\",\"enterActive\":\"profileTransition_enterActive__1k2rp\",\"exit\":\"profileTransition_exit__2FoAH\",\"exitActive\":\"profileTransition_exitActive__L1AEA\"};","import React from 'react';\nimport styles from './app.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nfunction Avatar({ contact, size, online }) {\n  const load = useSelector((state) => state.application.loading);\n\n  return load ? (\n    ''\n  ) : (\n    <div\n      className={`${styles.avatar}  ${\n        online ? styles.mediumonline : styles[size]\n      }`}\n    >\n      {contact !== undefined ? contact.fullname.substr(0, 1) : null}\n    </div>\n  );\n}\n\nAvatar.propTypes = {\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  contact: PropTypes.object,\n  online: PropTypes.bool,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport styles from './profile.module.css';\n\nfunction ContactInfoIcons() {\n  return (\n    <div className={styles.ContactInfoIcons}>\n      <span className=\"material-icons\">phone</span>\n      <span className=\"material-icons\">videocam</span>\n      <span className=\"material-icons\">email</span>\n    </div>\n  );\n}\n\nexport default ContactInfoIcons;\n","import React from 'react';\nimport styles from './profile.module.css';\nimport ContactInfoIcons from './ContactInfoIcons';\nimport PropTypes from 'prop-types';\n\nfunction ContactInfo(props) {\n  return (\n    <div>\n      <div className={styles.ContactInfoTitle}>{props.contact.fullname}</div>\n      <div className={styles.ContactInfoUsername}>\n        @{props.contact.username}\n      </div>\n      <ContactInfoIcons />\n    </div>\n  );\n}\n\nContactInfo.propTypes = {\n  contact: PropTypes.object,\n  username: PropTypes.string,\n};\n\nexport default ContactInfo;\n","import React from 'react';\nimport styles from './profile.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactSocial(props) {\n  return (\n    <div className={styles.ContactSocial}>\n      <div className={styles.ContactSocialTitle}>Social</div>\n      <div className={styles.ContactSocialNetworks}>\n        <div className={styles.ContactSocialNetworksInstagram}>\n          <span className=\"material-icons\">account_circle</span>\n          <div className={styles.ContactSocialNetworksInstagramTitle}>\n            {props.contact.socials === undefined\n              ? ''\n              : props.contact.socials.instagram}\n          </div>\n        </div>\n        <div className={styles.ContactSocialNetworksTwitter}>\n          <span className=\"material-icons\">storm</span>\n          <div className={styles.ContactSocialNetworksTwitterTitle}>\n            {props.contact.socials === undefined\n              ? ''\n              : props.contact.socials.facebook}\n          </div>\n        </div>\n        <div className={styles.ContactSocialNetworksFacebook}>\n          <span className=\"material-icons\">email</span>\n          <div className={styles.ContactSocialNetworksFacebookTitle}>\n            {props.contact.socials === undefined\n              ? ''\n              : props.contact.socials.twitter}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nContactSocial.propTypes = {\n  contact: PropTypes.object,\n  socials: PropTypes.object,\n  instagram: PropTypes.string,\n  facebook: PropTypes.string,\n  twitter: PropTypes.string,\n};\n\nexport default ContactSocial;\n","import React from 'react';\nimport styles from './profile.module.css';\n\nfunction ContactMedia(props) {\n  return (\n    <div className={styles.ContactMedia}>\n      <div className={styles.ContactMediaTitle}>Media</div>\n      <div className={styles.ContactMediaElements}>\n        <div className={styles.ContactMediaDoc}></div>\n        <div className={styles.ContactMediaSubtitle}>desktop-chat.pdf</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactMedia;\n","import React from 'react';\nimport styles from './profile.module.css';\nimport Avatar from '../App/Avatar';\nimport ContactInfo from './ContactInfo';\nimport ContactSocial from './ContactSocial';\nimport ContactMedia from './ContactMedia';\nimport PropTypes from 'prop-types';\n\nfunction TopProfileBlock(props) {\n  return (\n    <div className={styles.TopProfileBlock}>\n      <Avatar size={'large'} online={false} contact={props.contact} />\n      <ContactInfo contact={props.contact} />\n      <ContactSocial contact={props.contact} />\n      <ContactMedia />\n    </div>\n  );\n}\n\nTopProfileBlock.propTypes = {\n  contact: PropTypes.object,\n};\n\nexport default TopProfileBlock;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport TopProfileBlock from './TopProfileBlock';\nimport styles from './profile.module.css';\n\nfunction ContactsContent() {\n  const contacts = useSelector((state) => state.contacts.items);\n  const id = useParams().id;\n  const filteredContacts = contacts.filter((contact) => contact._id === id);\n\n  return (\n    <div className={styles.profileOverflow}>\n      {filteredContacts.map((contact) => {\n        return <TopProfileBlock contact={contact} key={contact._id} />;\n      })}\n    </div>\n  );\n}\n\nexport default ContactsContent;\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './profile.module.css';\r\nimport { Route } from 'react-router-dom';\r\nimport ContactsContent from './ContactsContent';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport profileTransitions from './profileTransition.module.css';\r\n\r\nfunction Profile() {\r\n  // const load = useSelector((state) => state.application.loading);\r\n  const showProfile = useSelector((state) => state.messages.showProfile);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={showProfile}\r\n      unmountOnExit\r\n      timeout={1000}\r\n      classNames={profileTransitions}\r\n    >\r\n      <div className={styles.profile}>\r\n        <Route exact path=\"/contact/:id?\">\r\n          <ContactsContent />\r\n        </Route>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","const initialState = {\n  filter: '',\n  items: [],\n  loading: false,\n  selectedContactId: null,\n};\n\nexport default function contacts(state = initialState, action) {\n  switch (action.type) {\n    case 'contacts/load/start':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'contacts/load/success':\n      return {\n        ...state,\n        items: action.payload,\n        loading: false,\n      };\n\n    case 'filter/contacts':\n      return {\n        ...state,\n        filter: action.payload,\n      };\n\n    case 'contacts/select':\n      return {\n        ...state,\n        selectedContactId: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const loadContacts = () => {\n  return (dispatch) => {\n    dispatch({\n      type: 'contacts/load/start',\n    });\n\n    fetch('https://api.intocode.ru:8001/api/contacts')\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({\n          type: 'contacts/load/success',\n          payload: json,\n        });\n      });\n  };\n};\n\nexport const setSearchContact = (text) => {\n  return {\n    type: 'filter/contacts',\n    payload: text,\n  };\n};\n\nexport const selectContact = (contactId) => {\n  return {\n    type: 'contacts/select',\n    payload: contactId,\n  };\n};\n","import React from 'react';\r\nimport styles from './chats.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSearchContact } from '../../redux/ducks/contacts';\r\n\r\nfunction Search() {\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  const handleSearchContact = (event) => {\r\n    dispatch(setSearchContact(event.target.value));\r\n  };\r\n  const handleClear = () => {\r\n    dispatch(setSearchContact(''));\r\n  };\r\n\r\n  return (\r\n    <div className={styles['contacts-search']}>\r\n      <div className={styles['contact-search']}>\r\n        <button className={styles['contact-search-btn']}>\r\n          <span className=\"material-icons\">search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"contactForm\"\r\n          type=\"text\"\r\n          placeholder={'Search contact'}\r\n          value={filter}\r\n          onChange={handleSearchContact}\r\n        />\r\n\r\n        {filter.length !== 0 && (\r\n           <button className={styles['contact-clear-btn']} onClick={handleClear}>\r\n            <span className=\"material-icons\">clear</span>\r\n          </button>\r\n            )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport styles from './chats.module.css';\n\nfunction SkeletonComponent(props) {\n  return (\n    <SkeletonTheme color=\"lightgrey\" highlightColor=\"#dedede\">\n      <div className={styles['contacts-skeleton']}>\n        <div className={styles['avatar-skeleton']}>\n          <Skeleton circle={true} height={35} width={35} />\n        </div>\n        <div className={styles['contact-skeleton']}>\n          <Skeleton count={1} width={115} height={16} />\n          <Skeleton count={1} width={80} height={12} />\n        </div>\n        <div className={styles['time-skeleton']}>\n          <Skeleton count={1} width={30} height={12} />\n        </div>\n      </div>\n    </SkeletonTheme>\n  );\n}\n\nexport default SkeletonComponent;\n","import React from 'react';\nimport styles from './chats.module.css';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from '../App/Avatar';\nimport * as dayjs from 'dayjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContact } from '../../redux/ducks/contacts';\n\nfunction Contact(props) {\n  const lastMessages = props.contact.lastMessage;\n  const selected = useSelector((state) => state.contacts.selectedContactId);\n  const dispatch = useDispatch();\n  const handleSelectContact = () => {\n    dispatch(selectContact(props.contact._id));\n  };\n\n  return (\n    <li\n      onClick={handleSelectContact}\n      className={\n        selected === props.contact._id\n          ? `${styles['contact-active']} ${styles['contact-chat']}`\n          : ''\n      }\n    >\n      <div className={styles['contact-avatar']}>\n        <Avatar\n          size={'medium'}\n          online={props.contact.online}\n          contact={props.contact}\n        />\n      </div>\n      <NavLink to={`/contact/${props.contact._id}`}>\n        <div className={styles['contact-names']}>\n          <div className={styles['contact-name']}>\n            {' '}\n            {props.contact.fullname}\n          </div>\n\n          <div className={styles['contact-last-message']}>\n            {lastMessages === undefined\n              ? ''\n              : lastMessages.content.substr(0, 20) + '...'}\n          </div>\n        </div>\n      </NavLink>\n      {lastMessages === undefined ? (\n        ''\n      ) : (\n        <div className={styles['contact-message-time']}>\n          {dayjs(lastMessages?.time).format('HH:mm')}\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default Contact;\n","import React, { useEffect } from 'react';\nimport styles from './chats.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadContacts } from '../../redux/ducks/contacts';\nimport Search from './Search';\nimport SkeletonComponent from './SkeletonComponent';\nimport Contact from './Contact';\n\nfunction Sidebar() {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.items);\n  const loading = useSelector((state) => state.contacts.loading);\n  const filter = useSelector((state) => state.contacts.filter);\n\n  const filteredContacts = contacts.filter(\n    (contact) =>\n      contact.fullname.toUpperCase().indexOf(filter.toUpperCase()) > -1,\n  );\n  const skeleton = new Array(9)\n    .fill(1)\n    .map((item, index) => <SkeletonComponent key={index} />);\n\n  useEffect(() => {\n    dispatch(loadContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.sidebar}>\n      <Search />\n      <div className={styles['contacts-chats']}>\n        <ul>\n          {loading\n            ? skeleton\n            : filteredContacts.map((contact) => {\n                return <Contact key={contact._id} contact={contact} />;\n              })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","export const messagesDownScroll = () => {\n  const message = document.getElementById('block_message');\n  message.scrollTop = message.scrollHeight;\n};\n","import { messagesDownScroll } from '../../down';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  filter: '',\n  messageText: '',\n  loadingMessage: false,\n  searchForm: false,\n  showProfile: false,\n};\n\nexport default function messages(state = initialState, action) {\n  switch (action.type) {\n    case 'message/load/start':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'message/load/success':\n      return {\n        ...state,\n        items: action.payload,\n        loading: false,\n      };\n\n    case 'message/send/start':\n      return {\n        ...state,\n        loadingMessage: true,\n        messageText: '',\n      };\n\n    case 'message/send/success':\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n        loadingMessage: false,\n      };\n\n    case 'filter/set':\n      return {\n        ...state,\n        filter: action.payload,\n      };\n\n    case 'searchForm/set':\n      return {\n        ...state,\n        searchForm: !state.searchForm,\n      };\n\n    case 'DELETE':\n      return {\n        ...state,\n        items: state.items.filter((item) => item._id !== action.payload),\n      };\n\n    case 'set/message/text':\n      return {\n        ...state,\n        messageText: action.payload,\n      };\n\n    case 'change/showProfile':\n      return {\n        ...state,\n        showProfile: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\n//подгрузка комментариев\nexport const loadMessages = (id) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'message/load/start',\n    });\n    fetch(\n      `https://api.intocode.ru:8001/api/messages/5f2ea3801f986a01cefc8bcd/${id}`,\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({\n          type: 'message/load/success',\n          payload: json,\n        });\n        messagesDownScroll();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    messagesDownScroll();\n  };\n};\n\n//удаление сообщений\nexport const setDeleteMessage = (id) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'delete/message/start',\n      payload: id,\n    });\n    fetch(\n      `https://api.intocode.ru:8001/api/messages/5f2ea3801f986a01cefc8bcd/${id}`,\n      {\n        method: 'DELETE',\n      },\n    ).then(() => {\n      dispatch({\n        type: 'DELETE',\n        payload: id,\n      });\n    });\n  };\n};\n\n// получение текста сообщений\nexport const setMessageText = (messageText) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'set/message/text',\n      payload: messageText,\n    });\n  };\n};\n\n//отправка сообщения\nexport const sendMessage = (myId, contactId, messageText) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'message/send/start',\n    });\n    fetch('https://api.intocode.ru:8001/api/messages', {\n      method: 'POST',\n      body: JSON.stringify({\n        myId: `${myId}`,\n        contactId: `${contactId}`,\n        type: 'text',\n        content: `${messageText}`,\n      }),\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({\n          type: 'message/send/success',\n          payload: json,\n        });\n        messagesDownScroll();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n};\n\n//фильтрация сообщений\nexport const setFilterMessages = (text) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'filter/set',\n      payload: text,\n    });\n  };\n};\n\nexport const setSearchForm = () => {\n  return {\n    type: 'searchForm/set',\n  };\n};\n\nexport const changeShowProfile = (showProfile) => {\n  return {\n    type: 'change/showProfile',\n    payload: !showProfile,\n  };\n};\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilterMessages, setSearchForm } from '../../redux/ducks/messages';\r\nimport styles from './messages.module.css';\r\n\r\nfunction FilterMessages() {\r\n  const filter = useSelector((state) => state.messages.filter);\r\n  const searchForm = useSelector((state) => state.messages.searchForm);\r\n  const dispatch = useDispatch();\r\n  const handleFilterMessages = (event) => {\r\n    dispatch(setFilterMessages(event.target.value));\r\n  };\r\n  const handleSearchForm = () => {\r\n    dispatch(setSearchForm());\r\n  };\r\n  const handleMessageSearchClear = () => {\r\n    dispatch(setFilterMessages(''));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.messageSearch}>\r\n      <button className={styles.messageSearchIcon}>\r\n        <span className=\"material-icons\" onClick={handleSearchForm}>\r\n          search\r\n        </span>\r\n      </button>\r\n      {searchForm ? (\r\n        <input  className={styles.filterMessage} type=\"text\" value={filter} onChange={handleFilterMessages} />\r\n      ) : (\r\n        ''\r\n      )}\r\n      {filter.length !== 0 && (\r\n        <button className={styles.messageClearIcon}>\r\n          <span className=\"material-icons\" onClick={handleMessageSearchClear}>\r\n            clear\r\n          </span>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterMessages;\r\n","import React from 'react';\nimport styles from './messages.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FilterMessages from './FilterMessages';\nimport { useParams } from 'react-router-dom';\nimport { changeShowProfile } from '../../redux/ducks/messages';\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const params = useParams().id;\n  const contacts = useSelector((state) => state.contacts.items);\n  const contact = contacts.find((contact) => contact._id === params);\n  const loadingMessages = useSelector((state) => state.messages.loading);\n  const showProfile = useSelector((state) => state.messages.showProfile);\n  const handleChangeShow = () => {\n    dispatch(changeShowProfile(showProfile));\n  };\n\n  return (\n    <div className={styles.header}>\n      <div className={styles['header-center-block']}>\n        <FilterMessages />\n        <div className={styles.messageAuthorName}>\n          <div className={styles.messageAuthorNameTitle}>\n            {loadingMessages ? (\n              <div className={styles.headerLoading}>\n                <span className=\"material-icons\">cached</span>\n                <div>Loading...</div>\n              </div>\n            ) : (\n              contact?.fullname\n            )}\n          </div>\n          <div className={styles.messageAuthorNameOnline}>\n            {contact?.online === true ? (\n              <span className=\"material-icons\">circle</span>\n            ) : (\n              ''\n            )}\n          </div>\n        </div>\n        <div className={styles.messageSettings}>\n          <span className=\"material-icons\" onClick={() => handleChangeShow()}>\n            settings\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport styles from './messages.module.css';\nimport PropTypes from 'prop-types';\n\nfunction MessageInfo(props) {\n  return <div className={styles.messageDesign}>{props.content}</div>;\n}\n\nMessageInfo.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n\nexport default MessageInfo;\n","import React from 'react';\nimport styles from './messages.module.css';\nimport Avatar from '../App/Avatar';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction InboxMessage(props) {\n  const id = useParams().id;\n  const contacts = useSelector((state) => state.contacts.items);\n  const contact = contacts.find((contact) => contact._id === id);\n\n  return (\n    <div className={styles.generalBlockMessageIn}>\n      <div className={styles.messageAvatar}>\n        <Avatar size={'small'} online={false} contact={contact} />\n      </div>\n      <div className={styles.messageDesignIn}>\n        <div className={styles.messageInText}>{props.content}</div>\n      </div>\n    </div>\n  );\n}\n\nInboxMessage.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n\nexport default InboxMessage;\n","import React from 'react';\nimport styles from './messages.module.css';\nimport { setDeleteMessage } from '../../redux/ducks/messages';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\n\nfunction OutboxMessage(props) {\n  const readMessage = props.message.read;\n  const timeSendMessage = props.message.time;\n  const handleDeleteMessage = () => {\n    dispatch(setDeleteMessage(messageId));\n  };\n  const dispatch = useDispatch();\n  const messageId = props.message._id;\n\n  return (\n    <div className={styles.messageDesignM}>\n      <div className={styles.messageDesignOut}>\n        <div className={styles.messageOutText}>{props.content}</div>\n        <div className={styles.messageTime}>\n          {dayjs(timeSendMessage).format('HH:mm')}\n        </div>\n        <div className={styles.messageRead}>\n          {readMessage === true ? (\n            <div>\n              <span className=\"material-icons\">done_all</span>\n            </div>\n          ) : (\n            <div>\n              <span className=\"material-icons\">check</span>\n            </div>\n          )}\n        </div>\n        <div className={styles.deleteButton} onClick={handleDeleteMessage}>\n          <span className=\"material-icons\">clear</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOutboxMessage.propTypes = {\n  message: PropTypes.object.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default OutboxMessage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MessageInfo from './MessageInfo';\nimport InboxMessage from './InboxMessage';\nimport OutboxMessage from './OutboxMessage';\nimport PropTypes from 'prop-types';\n\nfunction MessagesBlocks(props) {\n  const profileId = useSelector((state) => state.application.profile._id);\n  const toUserId = props.message.toUserId;\n  const loadingMessages = useSelector((state) => state.messages.loading);\n\n  if (loadingMessages) {\n    return '';\n  }\n  if (props.message.type === 'info') {\n    return <MessageInfo content={props.message.content} />;\n  }\n  if (toUserId === profileId) {\n    return (\n      <InboxMessage content={props.message.content} contact={props.contact} />\n    );\n  }\n  return (\n    <OutboxMessage message={props.message} content={props.message.content} />\n  );\n}\n\nMessagesBlocks.propTypes = {\n  message: PropTypes.object.isRequired,\n};\n\nexport default MessagesBlocks;\n","import React, { useEffect } from 'react';\nimport styles from './messages.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadMessages } from '../../redux/ducks/messages';\nimport MessagesBlocks from './MessagesBlocks';\nimport { useParams } from 'react-router-dom';\n\nfunction Messages(props) {\n  const dispatch = useDispatch();\n  const messages = useSelector((state) => state.messages.items);\n  const contactsId = useParams().id;\n  const filter = useSelector((state) => state.messages.filter);\n  const filteredMessages = messages.filter(\n    (messages) =>\n      messages.content.toUpperCase().indexOf(filter.toUpperCase()) > -1,\n  );\n\n  useEffect(() => {\n    dispatch(loadMessages(contactsId));\n  }, [contactsId, dispatch]);\n\n  return (\n    <div className={styles.messagesModal} id=\"block_message\">\n      <div className={styles.messageScroll}>\n        {filteredMessages.map((item) => {\n          return <MessagesBlocks message={item} key={item._id} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Messages;\n","import React from 'react';\nimport styles from './messages.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMessageText } from '../../redux/ducks/messages';\n\nfunction MessageSendForm() {\n  const messageText = useSelector((state) => state.messages.messageText);\n  const dispatch = useDispatch();\n  const handleChange = (event) => {\n    dispatch(setMessageText(event.target.value));\n  };\n\n  return (\n    <div className={styles.messageSendForm}>\n      <input\n        type=\"text\"\n        placeholder=\"Write a message\"\n        value={messageText}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default MessageSendForm;\n","import React from 'react';\nimport styles from './messages.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendMessage } from '../../redux/ducks/messages';\nimport { useParams } from 'react-router-dom';\n\nfunction MessageWriteRightBlock(props) {\n  const dispatch = useDispatch();\n  const messageText = useSelector((state) => state.messages.messageText);\n  const contactId = useParams().id;\n  const myId = useSelector((state) => state.application.profile._id);\n  const handleSendMessage = () => {\n    dispatch(sendMessage(myId, contactId, messageText));\n  };\n\n  return (\n    <div className={styles.messageWriteRightBlock}>\n      <div className={styles.clip}>\n        <span className=\"material-icons\">attach_file</span>\n      </div>\n      <div className={styles.microphone}>\n        {messageText === '' ? (\n          <span className=\"material-icons\">keyboard_voice</span>\n        ) : (\n          <span className=\"material-icons\" onClick={handleSendMessage}>\n            send\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MessageWriteRightBlock;\n","import React from 'react';\nimport styles from './messages.module.css';\nimport MessageSendForm from './MessageSendForm';\nimport MessageWriteRightBlock from './MessageWriteRightBlock';\n\nfunction WriteMessage(props) {\n  return (\n    <div className={styles.writeMessage}>\n      <MessageSendForm />\n      <MessageWriteRightBlock />\n    </div>\n  );\n}\n\nexport default WriteMessage;\n","import React from 'react';\nimport styles from './messages.module.css';\nimport Header from './Header';\nimport Messages from './Messages';\nimport WriteMessage from './WriteMessage';\n\nfunction Chat() {\n  return (\n    <div className={styles.messages}>\n      <Header />\n      <Messages />\n      <WriteMessage />\n    </div>\n  );\n}\n\nexport default Chat;\n","const initialState = {\n  profile: {},\n  loading: false,\n};\n\nexport default function application(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n    case 'load/profile/start':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'load/profile/finish':\n      return {\n        ...state,\n        profile: action.payload,\n        loading: false,\n      };\n  }\n}\n\nexport const loadProfile = () => {\n  return (dispatch) => {\n    dispatch({\n      type: 'load/profile/start',\n    });\n    fetch('https://api.intocode.ru:8001/api/profile')\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({\n          type: 'load/profile/finish',\n          payload: json,\n        });\n      });\n  };\n};\n\n// тут санки\n","import React, { useEffect } from 'react';\nimport styles from './app.module.css';\nimport Profile from '../Profile';\nimport Sidebar from '../SideBar';\nimport Chat from '../Chat';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { loadProfile } from '../../redux/ducks/application';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadProfile());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <Switch>\n        <Route exact path=\"/contact/:id?\">\n          <Sidebar />\n          <Chat />\n          <Profile />\n        </Route>\n        <Route>\n          <Sidebar />\n          <div className={styles.noSelectedChat}>\n            <div className={styles.chatNan}>\n              Please, select a chat to start messaging\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { application, messages, contacts } from './ducks';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger/src';\n\nconst logger = createLogger({\n  diff: true,\n  collapsed: true,\n});\n\nexport const store = createStore(\n  combineReducers({ application, messages, contacts }),\n  applyMiddleware(thunk, logger),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/configureStore';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2TIdB\",\"avatar\":\"profile_avatar__2_CTG\",\"TopProfileBlock\":\"profile_TopProfileBlock__1Cyzm\",\"ContactInfoTitle\":\"profile_ContactInfoTitle__P_Zk_\",\"ContactInfoUsername\":\"profile_ContactInfoUsername__2sPQJ\",\"ContactInfoIcons\":\"profile_ContactInfoIcons__2hpQI\",\"ContactSocial\":\"profile_ContactSocial__3yExV\",\"ContactSocialTitle\":\"profile_ContactSocialTitle__2WKaY\",\"ContactSocialNetworksInstagram\":\"profile_ContactSocialNetworksInstagram__2wUms\",\"ContactSocialNetworks\":\"profile_ContactSocialNetworks__IpfU3\",\"ContactSocialNetworksTwitter\":\"profile_ContactSocialNetworksTwitter__2fBt7\",\"ContactSocialNetworksFacebook\":\"profile_ContactSocialNetworksFacebook__2wmWT\",\"ContactSocialNetworksInstagramTitle\":\"profile_ContactSocialNetworksInstagramTitle__2DRxH\",\"ContactSocialNetworksTwitterTitle\":\"profile_ContactSocialNetworksTwitterTitle__2EJN5\",\"ContactSocialNetworksFacebookTitle\":\"profile_ContactSocialNetworksFacebookTitle__RUHsp\",\"ContactMedia\":\"profile_ContactMedia__2zIrF\",\"ContactMediaTitle\":\"profile_ContactMediaTitle__1lVIe\",\"ContactMediaDoc\":\"profile_ContactMediaDoc__2Y077\",\"ContactMediaElements\":\"profile_ContactMediaElements__pRkFu\",\"ContactMediaSubtitle\":\"profile_ContactMediaSubtitle__1gyjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"chats_sidebar__2yTCc\",\"contacts-chats\":\"chats_contacts-chats__3RsJ-\",\"contact-active\":\"chats_contact-active__LFcjB\",\"contact-chat\":\"chats_contact-chat__2oIe1\",\"contacts-search\":\"chats_contacts-search__nsJct\",\"contact-search\":\"chats_contact-search__2ga4_\",\"contact-search-btn\":\"chats_contact-search-btn__7dw_u\",\"contact-clear-btn\":\"chats_contact-clear-btn__361I8\",\"contact-avatar\":\"chats_contact-avatar__1eyu6\",\"avatar-skeleton\":\"chats_avatar-skeleton__3WSIG\",\"contact-names\":\"chats_contact-names__LGS7c\",\"contact-skeleton\":\"chats_contact-skeleton__2HaX3\",\"contact-name\":\"chats_contact-name__2a8DS\",\"contact-last-message\":\"chats_contact-last-message__14V1J\",\"contact-message-time\":\"chats_contact-message-time__19Js6\",\"contacts-skeleton\":\"chats_contacts-skeleton__1I5Of\",\"time-skeleton\":\"chats_time-skeleton__34te1\"};"],"sourceRoot":""}